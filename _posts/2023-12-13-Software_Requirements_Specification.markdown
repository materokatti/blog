---
layout: post
title: "Software Requirements Specification?"
date: 2023-12-13 18:00:00
categories: mediator SRS
tags:
image: /assets/images/postBanner.jpg
image2: /assets/images/postFooter.jpg
---

> 일의 본질은 무엇을 만들어낼 것인가의 문제다. 그러나 엔지니어는 일을 어떻게 수행하느냐에 초점을 두기 때문에 중요한 것을 놓치기 쉽다. - 오병곤 (실용주의 소프트웨어 개발에서 발췌)

**소개**: 소프트웨어 개발에서 기능요구서의 중요성은 종종 간과되곤 합니다. 이 글에서는 기능요구서가 왜 필요한지, 그리고 어떻게 잘 작성할 수 있는지에 대해 알아봅니다.

## 기능요구서란 뭔가?

프로젝트의 성공은 명확하고 완전한 요구사항에서 시작됩니다. 기능요구서(Software Requirements Specification, SRS)는 프로젝트의 목표를 정의하고, 개발 팀이 정확한 소프트웨어를 개발할 수 있도록 하는 문서입니다.

### 써야 하는 현실적 이유

요구사항 오류의 해결 비용은 요구 분석 단계에서 가장 적게 듭니다. 프로젝트 생명주기가 뒤로 갈수록 요구사항 오류를 해소하는 비용은 기하급수적으로 증가하죠. 프로젝트 마무리 후 오류 보완 비용은 요구 분석 단계와 비교하면 200배까지 증가합니다.

### 중요하지만 소외받는 요구사항

요구 사항은 이렇게 중요하지만 현실에선 대접을 받지 못합니다. 납기 압박으로 분석 단계의 공정을 형식적으로 진행하고 코딩 단계로 빠르게 넘어가고 싶어하죠.

### 프로젝트 실패의 주된 원인 중 하나?

많은 프로젝트 실패 사례에서 불완전한 요구사항이 가장 큰 비중을 차지합니다. 이를 통해 요구사항의 명확한 정의와 관리의 중요성을 알 수 있습니다.

하단의 표는 프로젝트 실패 요인에 대한 'standish Group 및 Scientific American의 352개 기업 8000개 프로젝트' 조사 결과물입니다.

| 실패요인                     | 비중    |
| ---------------------------- | ------- |
| 불완전한 요구사항            | `13.1%` |
| 고객참여 부족                | `12.4%` |
| 자원 부족                    | `10.6%` |
| 비현실적 기대치              | `9.9%`  |
| 경영진의 지원 부족           | `9.3%`  |
| 요구사항 및 규격의 잦은 변경 | `8.7%`  |
| 미흡한 기획                  | `8.1%`  |
| 더 이상 필요 없기 때문에     | `7.5%`  |

## 어떻게 작성할 것인가?

### 요구사항 작성 시 흔히 발생하는 오류

종종 요구사항은 너무 기술 중심으로 작성되거나, 비즈니스 요구가 아닌 기술적 요구로 기술됩니다. 요구사항은 사용자의 언어로 명확하고 구체적으로 작성되어야 합니다.

### 우수한 요구사항의 특징

좋은 요구사항은 구체적이고, 명확하며, 검증 가능해야 합니다. 또한, 사용자의 실제 필요를 반영하고, 모든 이해관계자가 이해할 수 있어야 합니다. 아래의 목차는 도서 '실용주의 소프트웨어 개발'에서 발췌한 우수한 요구사항의 특징들입니다.

- 구체적으로 써서 완성도를 높여라
- 요구를 정확히 정의해라
- 목표 시스템에 타당해야 한다
- 사용자가 실제로 필요해야 한다
- 구현을 위한 우선순위를 부여해야 한다
- 모두의 이해를 위해 모호하지 않아야 한다
- 구현 여부를 검증 가능해야 한다

### 요구사항을 정의할 때 우리가 저지르는 오류들

- **소프트웨어 개발의 전체 범위를 명시하지 않는다.**
  : 기능 뿐 아니라 비기능(품질특성)을 포함해 구체적으로 누락없이 명시되어야 한다.
- **What이 아니라 How 중심으로 기술한다.**
  : How 즉 방법은 요구 사항이 아니라 설계에서 이뤄지면 된다.
- **요구사항이 비즈니스 용어가 아닌 기술용어로 작성된다**
  : 요구사항은 사용자 요구이므로 고객의 언어로 기술되어야 한다.

### 작은 단위의 기능 요청에도 적용 가능할까?

작은 단위의 기능 요청에서도 SRS는 명확한 목표 설정, 효율적인 커뮤니케이션, 문서화 및 추적 용이성을 제공합니다. 프로젝트 규모에 관계없이 SRS는 중요합니다. SRS가 작은 단위 요청에서도 필요한 이유는 아래와 같습니다.

1.  **명확한 목표 설정**: 작은 규모의 프로젝트에서도 목표와 요구 사항을 명확히 정의하는 것이 중요합니다. SRS는 프로젝트의 목표와 범위를 분명히 하여, 개발 과정에서 발생할 수 있는 오해를 최소화합니다.
2.  **효율적인 커뮤니케이션**: SRS는 개발 팀, 고객, 이해관계자 간의 커뮤니케이션을 용이하게 합니다. 작은 규모의 프로젝트에서도 이해관계자들 간의 의사소통을 명확히 하기 위해 SRS를 사용할 수 있습니다.
3.  **문서화 및 추적 용이성**: 프로젝트의 요구 사항을 문서화함으로써, 프로젝트 진행 상황을 추적하고 관리하기가 더 쉬워집니다. 이는 작은 규모의 프로젝트에서도 마찬가지로 중요합니다.
4.  **품질 보증 및 위험 관리**: SRS는 프로젝트의 요구 사항을 충족시키는 데 필요한 기준을 제공합니다. 이를 통해 품질 보증 및 위험 관리에 기여할 수 있습니다.
5.  **유연성 및 확장성**: 작은 프로젝트라 할지라도, 추후 확장이나 변경이 필요할 수 있습니다. SRS는 이러한 변화에 대응하기 위한 기반을 마련해 줍니다.

## 소프트웨어 기능요구서 : SRS 란 뭘까?

개발자 입장에서 요구사항이 누락되지 않도록 하기 위한 첫 발자국은 잘 기술된 SRS입니다. 소프트웨어 요구 사항 명세서(SRS: Software Requirements Specification)는 소프트웨어 개발 프로젝트에서 매우 중요한 문서입니다. 이 문서는 개발될 소프트웨어의 기능, 성능, 인터페이스, 디자인에 대한 자세한 요구 사항을 기술합니다. SRS의 주요 목적은 고객의 요구사항을 명확히 하고, 이를 바탕으로 개발 팀이 정확한 소프트웨어를 개발할 수 있도록 하는 것입니다.

요구 사항 누락과 Software Requirements Specification (SRS) 작성 사이에는 큰 상관관계가 있습니다. SRS는 프로젝트의 성공을 위해 필수적인 요구 사항을 정의하고 문서화하는 과정입니다. 이 과정이 잘 관리되면 요구 사항 누락의 위험을 줄일 수 있습니다. 반면, SRS 작성 과정에서 주의를 기울이지 않으면 요구 사항 누락으로 인한 문제가 발생할 수 있습니다.

### SRS 예시

그럼 예시로 "사내 엑셀 작업 자동화를 위한 파이썬 프로그램 제작"에 대한 SRS를 기술해보겠습니다.

---

**문서 제목**: 사내 엑셀 작업 자동화를 위한 파이썬 프로그램 Software Requirements Specification

**문서 버전**: 1.0

**작성일**: YYYY-MM-DD

**작성자**: [작성자 이름]

---

### 1. 서론

#### 1.1 목적

본 문서는 사내에서 사용될 엑셀 작업 자동화 파이썬 프로그램의 소프트웨어 요구 사항을 명세합니다. 이 프로그램은 엑셀 데이터 처리 및 보고서 생성 작업을 자동화하여 효율성을 증대시키는 것을 목표로 합니다.

#### 1.2 문서 관리자

- [문서 관리자의 이름 및 연락처]

---

### 2. 전체 설명

#### 2.1 제품 관점

이 파이썬 프로그램은 엑셀 파일을 읽고, 특정 데이터를 처리 및 분석하여, 결과를 새로운 엑셀 파일로 출력하는 기능을 제공합니다. 프로그램은 사용자가 지정한 규칙에 따라 데이터를 처리할 수 있어야 합니다.

#### 2.2 제품 기능

- **데이터 읽기**: 엑셀 파일에서 필요한 데이터를 읽어들일 수 있습니다.
- **데이터 처리**: 사용자가 정의한 규칙에 따라 데이터를 처리합니다.
- **보고서 생성**: 처리된 데이터를 바탕으로 요약 보고서를 엑셀 형식으로 생성합니다.

---

### 3. 구체적 요구 사항

#### 3.1 기능 요구 사항

1.  **파일 입력**: 사용자는 프로그램을 통해 엑셀 파일을 업로드할 수 있어야 합니다.
2.  **데이터 선택 및 필터링**: 사용자는 엑셀 파일 내 특정 셀이나 범위를 선택하여 데이터를 필터링할 수 있어야 합니다.
3.  **사용자 정의 규칙 설정**: 사용자는 데이터 처리 규칙을 설정할 수 있어야 합니다.
4.  **보고서 출력**: 프로그램은 처리된 데이터를 요약하여 새 엑셀 파일로 저장합니다.

#### 3.2 성능 요구 사항

- 프로그램은 대용량의 엑셀 파일(최대 10,000개 셀)을 1분 이내에 처리할 수 있어야 합니다.

#### 3.3 보안 요구 사항

- 모든 데이터 처리는 사내 네트워크 내에서 이루어져야 하며, 외부에 데이터가 유출되지 않아야 합니다.

---

### 4. 부록

- 사용자 매뉴얼
- 설정 가이드

---

### 작성시 주의할 점

예시를 보며 작성하시다가 잘 쓰고 있나 의문이 든다면, 아래의 다섯가지 조건에 맞게 쓰고 있는지 확인해보시면 좋습니다.

1.  **명확성과 정확성**
2.  **완전성과 일관성**
3.  **검증 가능성과 추적 가능성**
4.  **이해관계자 참여와 소통**
5.  **문서의 구조와 유연성**

이 다섯가지 조건은 앞에서 작은 기능 단위에서도 SRS가 필요한 이유와 동일합니다. 즉 SRS가 협업에 안정성을 주는 가장 중요한 조건들이죠. 이 다섯가지를 염두하고 작성해주신다면 적어도 기본적인 요구사항 전달의 목적은 달성합니다.
